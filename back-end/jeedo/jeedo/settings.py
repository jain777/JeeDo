"""
Django settings for jeedo project.

Generated by 'django-admin startproject' using Django 3.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

import logging
import os
from decouple import config

logger= logging.getLogger()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY',default='=i0a&1v7(*(m-lq+&es^y7nwda3@$^i9s2t!bk9ipwkf+2lzvm',cast =str)

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG',default =True,cast =bool)


ALLOWED_HOSTS = config('ALLOWED_HOSTS',cast =lambda v:[s.strip() for s in v.split(',')])


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_cleanup',
    'ckeditor_uploader',
    'import_export',
    'accounts',
    'team',
    'rest_framework',
    'django_filters',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'jeedo.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'jeedo.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases
if DEBUG:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': os.path.join(BASE_DIR,'db.sqlite3')
        }
    }
else:
    DATABASES={}




# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Kolkata'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/
ADMINS = [tuple(s for s in v.split(":")) for v in config('ADMIN_EMAILS').split("|")]
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

SERVER_EMAIL = config('EMAIL_ID')
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = '465'
EMAIL_HOST_USER = config('EMAIL_ID')  # For Forgot Password Email
EMAIL_HOST_PASSWORD = config('EMAIL_PASSWORD')
EMAIL_USE_SSL = True
JEEDO_EMAIL = config('JEEDO_EMAIL_ID')  # For Sending other Details
JEEDO_EMAIL_PASSWORD = config('JEEDO_EMAIL_PASSWORD')
RECIPIENT_EMAILS = config('RECIPIENT_EMAIL').split(',')  # For getting the details of the company that registered
SEND_EMAIL_ASPIRANT = config('SEND_EMAIL_STUDENT', default=True, cast=bool)
SEND_EMAIL_EXPERT = config('SEND_EMAIL_COMPANY', default=True, cast=bool)
#SEND_EMAIL_COMPANY_DETAILS = config('SEND_EMAIL_COMPANY_DETAILS', default=True, cast=bool)

STATIC_URL = '/static_django/'

STATICFILES_DIRS=[
    os.path.join(BASE_DIR, config('MEDIA_PATH',default = 'assests/media/staticfiles',cast = str)),

]
MEDIA_ROOT = os.path.join(BASE_DIR,config('MEDIA_PATH',default = 'assets/media',cast =str))
MEDIA_URL = '/media_django/'

REST_FRAMEWORK ={
    'DEFAULT_AUTHENTICATION_CLASSES':(
        'accounts.authentication.SessionAuthentication',
    )
}

if not DEBUG:
    REST_FRAMEWORK['DEFAULT_RENDERER_CLASSES']=(
        'rest_framework.renderers.JSONRenderer'
    )